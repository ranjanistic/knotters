name: Client Static CI

on:
  push:
    branches: [main]
    paths:
      - "!templates/**"
      - "!main/**"
      - "!moderation/**"
      - "!compete/**"
      - "!people/**"
      - "!projects/**"
      - "!**.py"
      - "genversion.py"
      - "static/**"

jobs:
  testing:
    runs-on: [self-hosted, testing]
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
    - name: Setup source
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create Environment
      run: |
        touch ${{ secrets.ENVPATH }}
        echo "PROJECTKEY=${{ secrets.PROJECTKEY }}" >> ${{ secrets.ENVPATH }}
        echo "PUBNAME=${{ secrets.PUBNAME }}" >> ${{ secrets.ENVPATH }}
        echo "ENV=${{ secrets.ENV }}" >> ${{ secrets.ENVPATH }}
        echo "HOSTS=${{ secrets.HOSTS }}" >> ${{ secrets.ENVPATH }}
        echo "DBNAME=${{ secrets.DBTESTNAME }}" >> ${{ secrets.ENVPATH }}
        echo "DBLINK=${{ secrets.DBTESTLINK }}" >> ${{ secrets.ENVPATH }}
        echo "DBUSER=${{ secrets.DBTESTUSER }}" >> ${{ secrets.ENVPATH }}
        echo "DBPASS=${{ secrets.DBTESTPASS }}" >> ${{ secrets.ENVPATH }}
        echo "MAILUSER=${{ secrets.MAILUSER }}" >> ${{ secrets.ENVPATH }}
        echo "MAILPASS=${{ secrets.MAILPASS }}" >> ${{ secrets.ENVPATH }}
        echo "BOTMAIL=${{ secrets.BOTMAIL }}" >> ${{ secrets.ENVPATH }}
        echo "ADMINPATH=${{ secrets.ADMINPATH }}" >> ${{ secrets.ENVPATH }}
        echo "GITHUBBOTTOKEN=${{ secrets.GITHUBBOTTOKEN }}" >> ${{ secrets.ENVPATH }}
        echo "DISCORDBOTTOKEN=${{ secrets.DISCORDBOTTOKEN }}" >> ${{ secrets.ENVPATH }}
        echo "SITE=${{ secrets.SITE }}" >> ${{ secrets.ENVPATH }}
        echo "SENDERTOKEN=${{ secrets.SENDERTOKEN }}" >> ${{ secrets.ENVPATH }}
        echo "MEDIA_URL=${{ secrets.MEDIA_URL }}" >> ${{ secrets.ENVPATH }}
        echo "STATIC_URL=${{ secrets.STATIC_URL }}" >> ${{ secrets.ENVPATH }}
        echo "STATIC_ROOT=${{ secrets.STATIC_ROOT }}" >> ${{ secrets.ENVPATH }}
        echo "SERVER_EMAIL=${{ secrets.SERVER_EMAIL }}" >> ${{ secrets.ENVPATH }}
        echo "GH_HOOK_SECRET=${{ secrets.GH_HOOK_SECRET }}" >> ${{ secrets.ENVPATH }}
        echo "REDIS_LOCATION=${{ secrets.REDIS_LOCATION }}" >> ${{ secrets.ENVPATH }}
        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> ${{ secrets.ENVPATH }}
        echo "RECAPTCHA_KEY=${{ secrets.RECAPTCHA_KEY }}" >> ${{ secrets.ENVPATH }}
        echo "RECAPTCHA_SECRET=${{ secrets.RECAPTCHA_SECRET }}" >> ${{ secrets.ENVPATH }}
        echo "VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}" >> ${{ secrets.ENVPATH }}
        echo "VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}" >> ${{ secrets.ENVPATH }}
        echo "VAPID_ADMIN_MAIL=${{ secrets.VAPID_ADMIN_MAIL }}" >> ${{ secrets.ENVPATH }}
        echo "LOCALE_ABS_PATH=${{ secrets.LOCALE_ABS_PATH }}" >> ${{ secrets.ENVPATH }}
    - name: Run migrations
      run: |
        python3 manage.py makemigrations --noinput
        python3 manage.py migrate --noinput
    - name: Run tests
      run: |
        python3 manage.py test --noinput --verbosity=1 --keepdb --tag=static
    - name: Clear environment
      run: |
        sudo rm -f ${{ secrets.ENVPATH }}

  client_deploy:
    needs: [testing]
    runs-on: [self-hosted,deployment,production]
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
    - name: Merge changes
      run: |
        git pull origin main --depth=100
    - name: Release new version
      run: |
        ~/Env/knotters/bin/python3 genversion.py
        ~/Env/knotters/bin/python3 manage.py collectstatic --noinput
    - name: Restart server
      run: |
        sudo systemctl restart knotters.gunicorn
    - name: Clear environment
      run: |
        sudo rm -f ${{ secrets.ENVPATH }}
