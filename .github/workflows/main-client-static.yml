name: Client Static CI

on:
  push:
    branches: [main]
    paths:
      - "static/**"

jobs:
  testing:
    runs-on: [self-hosted, testing]
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Setup source
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create Environment
      run: |
        touch ${{ secrets.ENVPATH }}
        echo "${{ secrets.ENV_TEST }}" > ${{ secrets.ENVPATH }}
        cp ${{ secrets.ENVPATH }} ${{ secrets.ENVPATH }}.testing
    - name: Run migrations
      run: |
        python3 manage.py makemigrations --noinput
        python3 manage.py migrate --noinput
    - name: Run tests
      run: |
        python3 manage.py test --noinput --verbosity=1 --parallel
    - name: Clear environment
      run: |
        rm -f ${{ secrets.ENVPATH }}

  build:
    needs: [testing]
    runs-on: [self-hosted, building, production]
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Create backup
      run: |
        mongodump --forceTableScan --uri="${{ secrets.DBBACKUPLINK }}" -o _backup_
        tar czf _backup_/${{ secrets.DBNAME }}.tar.gz _backup_/${{ secrets.DBNAME }}
        rm -f _backup_/${{ secrets.DBNAME }}.tar.gz.gpg
        gpg -e -r ${{ secrets.MAILUSER }} _backup_/${{ secrets.DBNAME }}.tar.gz
        rm -f -r _backup_/${{ secrets.DBNAME }}
        rm -f _backup_/${{ secrets.DBNAME }}.tar.gz
        drive push -force -no-prompt -destination backups ~/drive/${{ secrets.DBNAME }}.tar.gz.gpg
    - name: Merge changes
      run: |
        git pull --depth=100
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup environment
      run: |
        echo "${{ secrets.ENV_PROD }}" > ${{ secrets.ENVPATH }}
        gpg --pinentry-mode loopback --passphrase "${{ secrets.KNOTTERSBOTGPG }}" -o ${{ secrets.ENVPATH }} -d ${{ secrets.ENVGPGPATH }}
    - name: Run migrations
      run: |
        python3 manage.py makemigrations --noinput
        python3 manage.py migrate --noinput
    - name: Clear environment
      run: |
        rm -f ${{ secrets.ENVPATH }}

  client_deploy:
    needs: [build]
    runs-on: [self-hosted,deployment,production]
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Merge changes
      run: |
        git pull origin main --depth=100
    - name: Setup environment
      run: |
        echo "${{ secrets.ENV_PROD }}" > ${{ secrets.ENVPATH }}
        gpg --pinentry-mode loopback --passphrase "${{ secrets.KNOTTERSBOTGPG }}" -o ${{ secrets.ENVPATH }} -d ${{ secrets.ENVGPGPATH }}
    - name: Release new version
      run: |
        ~/Env/knotters/bin/python3 genversion.py
        ~/Env/knotters/bin/python3 manage.py collectstatic --noinput
        ~/Env/knotters/bin/python3 manage.py preparestatics /var/www/knotters/errors/
    - name: Restart server
      run: |
        echo "${{ secrets.ENV_PROD }}" > ${{ secrets.ENVPATH }}
        systemctl --user restart knotters.gunicorn.service
    - name: Clear environment
      run: |
        rm -f ${{ secrets.ENVPATH }}
